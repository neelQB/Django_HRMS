# Generated by Django 5.1.6 on 2025-02-12 12:11

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('employee_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(blank=True, max_length=25, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=6)),
                ('mobile', models.CharField(max_length=15, unique=True)),
                ('profile', models.ImageField(blank=True, null=True, upload_to='profilepics')),
                ('dob', models.DateField(null=True)),
                ('address', models.TextField(default='N.A.')),
                ('team', models.CharField(choices=[('Python', 'Python'), ('.NET', '.NET'), ('REACT', 'REACT')], max_length=6)),
                ('role', models.CharField(choices=[('Manager', 'Manager'), ('Team Lead', 'Team Lead'), ('Jr. Developer', 'Jr. Developer'), ('Sr. Developer', 'Sr. Developer'), ('Intern', 'Intern'), ('Employee', 'Employee')], default='Employee', max_length=60)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('joining_date', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
